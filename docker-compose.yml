version: '3'
services:
    flask:
        build: .
        container_name: flask
        restart: unless-stopped
        ports:
            - "8000:8000"
        environment:
            APP_ENV: "prod"
            APP_DEBUG: "False"
            MONGODB_HOST: "${MONGODB_HOST}"
            MONGODB_DB: "${MONGODB_DB}"
            MONGODB_USER: "${MONGODB_USER}"
            MONGODB_PWD: "${MONGODB_PWD}"
            JWT_SECRET: "${JWT_SECRET}"
            CLOUDINARY_KEY: "${CLOUDINARY_KEY}"
            CLOUDINARY_SECRET: "${CLOUDINARY_SECRET}"
            CLOUDINARY_NAME: "${CLOUDINARY_NAME}"
        networks:
            - backend 
        volumes: 
            - ./app:/ddict/app:ro
            - ./wsgi.py/:/ddict/wsgi.py:ro

    mongodb:
        image: mongo:4.0.8
        container_name: mongodb
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USER}"
            MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PWD}"
            MONGO_INITDB_DATABASE: ddictDB
            MONGODB_DATA_DIR: /data/db
            MONDODB_LOG_DIR: /dev/null
        volumes:
            - mongodbdata:/data/db
            - ./test/data:/test/data
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
            - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
        ports:
            - "27017:27017"
        networks:
            - backend
networks:
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
